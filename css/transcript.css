:root {
	--source-color: hsl(120, 100%, 50%);
}
@media (prefers-color-scheme: dark) {
	:root {
		color-scheme: dark;
		--box-border-cite: gray;
		--box-border-james: orange;
		--box-border-nick: blue;
		--box-border-clip: gray;
		--box-border-credits: gray;
		/* --box-border-from: #00b500; */
		--box-border-comment: gray;
		--box-header-color: gray;
		
		--mark-stolen-text: #ffeccc;
		--mark-stolen-bg: #412900;
		--mark-source-text: #c9d1d9;
		--mark-source-bg: #033a16;
	}
}
@media (prefers-color-scheme: light) {
	:root {
		color-scheme: light;
		--box-border-cite: gray;
		--box-border-james: orange;
		--box-border-nick: blue;
		--box-border-clip: gray;
		--box-border-credits: gray;
		/* --box-border-from: green; */
		--box-border-comment: gray;
		--box-header-color: gray;
		
		--mark-stolen-text: #412900;
		--mark-stolen-bg: #ffeccc;
		--mark-source-text: #000000;
		--mark-source-bg: #abf1c4;
	}
}

body {
	height: 100%;
	background-color: var(--color-canvas-default);
}
.wrapper {
	max-width: 1200px;
	margin-inline: auto;
}

.video-list {
	margin-inline: auto;
	width: fit-content;
	min-width: 70%;
}

.markdown-body p:last-child {
	margin-bottom: 0.3em;
}


compare {
	display: grid;
	grid-template-rows: auto-flow;
	grid-template-columns: [j-start n-start] 1fr [j-end n-end f-start] 1fr [f-end];
	column-gap: 4px;
	row-gap: 6px;
	margin-block: 6px;
}
.podcast compare {
	grid-template-columns: [j-start] 1fr [n-start] 3fr [j-end] 1fr [n-end f-start] 5fr [f-end];
}

compare :is(james, nick, clip, credits, from, comment) {
	display: block;
	border: white 1px solid;
	padding: 0px 8px;
	counter-reset: marker-num;
	display: flex;
	flex-direction: column;
}
compare james {
	grid-column: j-start / j-end;
	border-color: var(--box-border-james);
}
compare nick {
	grid-column: n-start / n-end;
	border-color: var(--box-border-nick);
}
compare clip {
	grid-column: j-start / n-end;
	border-color: var(--box-border-clip);
}
compare credits {
	grid-column: j-start / n-end;
	border-color: var(--box-border-credits);
}
compare from    {
	grid-column: f-start / f-end;
	/* border-color: var(--box-border-from); */
	border-color: var(--source-color);
}
compare comment {
	grid-column: f-start / f-end;
	border-color: var(--box-border-comment); 
	font-size: smaller;
}

.podcast compare james[crosstalk] {
	grid-column: j-start / n-start;
}
.podcast compare nick[crosstalk] {
	grid-column: j-end / n-end;
}

compare :is(james, nick, clip, credits, from, comment)[span="2"] { grid-row: span 2; }
compare :is(james, nick, clip, credits, from, comment)[span="3"] { grid-row: span 3; }
compare :is(james, nick, clip, credits, from, comment)[span="4"] { grid-row: span 4; }
compare :is(james, nick, clip, credits, from, comment)[span="5"] { grid-row: span 5; }
compare :is(james, nick, clip, credits, from, comment)[span="6"] { grid-row: span 6; }
compare :is(james, nick, clip, credits, from, comment)[span="7"] { grid-row: span 7; }
compare :is(james, nick, clip, credits, from, comment)[span="8"] { grid-row: span 8; }
compare :is(james, nick, clip, credits, from, comment)[span="9"] { grid-row: span 9; }
compare :is(james, nick, clip, credits, from, comment)[span="10"] { grid-row: span 10; }
compare :is(james, nick, clip, credits, from, comment)[span="11"] { grid-row: span 11; }
compare :is(james, nick, clip, credits, from, comment)[span="12"] { grid-row: span 12; }
compare :is(james, nick, clip, credits, from, comment)[span="13"] { grid-row: span 13; }
compare :is(james, nick, clip, credits, from, comment)[span="14"] { grid-row: span 14; }
compare :is(james, nick, clip, credits, from, comment)[span="15"] { grid-row: span 15; }
compare :is(james, nick, clip, credits, from, comment)[span="16"] { grid-row: span 16; }
compare :is(james, nick, clip, credits, from, comment)[span="17"] { grid-row: span 17; }
compare :is(james, nick, clip, credits, from, comment)[span="18"] { grid-row: span 18; }
compare :is(james, nick, clip, credits, from, comment)[span="19"] { grid-row: span 19; }
compare :is(james, nick, clip, credits, from, comment)[span="20"] { grid-row: span 20; }

compare :is(from, comment, clip, credits) > .header
{
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	
	font-size: small;
	color: var(--box-header-color);
	border-bottom: var(--box-header-color) 1px solid;
	padding: 2px 4px 0px;
}
compare from > .header::before { content: 'Source:'; }
compare clip > .header::before { content: 'Video Clip:'; }
compare comment > .header::before { content: 'Comment:'; }

compare :is(james, nick, credits)::before
{
	display: block;
	font-size: small;
	color: var(--box-header-color);
	border-bottom: var(--box-header-color) 1px solid;
	padding: 2px 4px 0px;
}
compare james::before   { content: 'James:'; }
compare nick::before    { content: 'Nick:'; }
compare james[timecode]::before   { content: 'James: (' attr(timecode) ')'; text-align-last: justify; }
compare nick[timecode]::before    { content: 'Nick: (' attr(timecode) ')'; text-align-last: justify; }

compare james[timecode][mid-text]::before   { content: 'James: ' attr(mid-text) ' (' attr(timecode) ')'; text-align-last: justify; }
compare james[mid-text]::before             { content: 'James: ' attr(mid-text) ' \00A0\00A0\00A0\00A0\00A0\00A0\00A0\00A0'; text-align-last: justify; }

compare credits.opening::before { content: 'Opening Credits:'; }
compare credits.closing::before { content: 'Closing Credits:'; }
compare credits[header]::before { content: attr(header); }
compare credits[header][timecode]::before { content: attr(header)' (' attr(timecode) ')'; text-align-last: justify; }

compare .footer {
	font-size: small;
	color: var(--box-header-color);
	border-top: var(--box-header-color) 1px solid;
	padding: 0px 4px 2px;
	margin-top: auto;
}


compare credits blockquote {
	color: unset !important;
    text-align: center;
    background-color: var(--color-canvas-subtle);
    border-inline: 0.25em solid var(--color-border-default);
}

compare blockquote {
	color: unset !important;
    background-color: var(--color-canvas-subtle);
}

span.add, sup.add {
	background-color: var(--color-prettylights-syntax-markup-inserted-bg); 
	color: var(--color-prettylights-syntax-markup-inserted-text);
}
span.del, sup.del {
	background-color: var(--color-prettylights-syntax-markup-deleted-bg); 
	color: var(--color-prettylights-syntax-markup-deleted-text);
	text-decoration: line-through;
}

sup[cn]::before {
	content: "[citation needed]";
	color: var(--color-accent-fg);
	font-style: italic;
}

compare :is(james, clip) mark {
	background-color: var(--mark-stolen-bg) !important;
	color: var(--mark-stolen-text) !important;
}
compare from mark  {
	background-color: var(--mark-source-bg) !important;
	color: var(--mark-source-text) !important;
	background-color: color-mix(in srgb, var(--source-color) 30%, var(--color-canvas-default)) !important;
	color: color-mix(in srgb, var(--source-color) 30%, var(--color-fg-default)) !important;
}

compare :is(james, from) mark
{
	counter-increment: marker-num;
	position: relative;
}
compare :is(james, from) mark::before
{
	content: counter(marker-num);
	vertical-align: super;
	font-size: x-small;
	color: var(--color-accent-fg);
}
compare :is(james, from) mark[num]::before
{
	content: attr(num);
}

compare from:empty {
	filter: opacity(0.50);
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
	border: unset;
}
compare from:empty::before {
    position: absolute;
    left: 4px;
    top: 4px;
    right: 4px;
}
compare from:empty::after {
	content: 'No plagiarism found yet';
	font-size: smaller;
	color: var(--color-fg-muted);
	align-self: center;
}

compare comment:empty {
	filter: opacity(0.50);
	border: unset;
}
compare comment a {
	word-break: break-word;
}

compare from :is(h1,h2,h3,h4,h5,h6) {
	margin-block: 0 4px !important;
}

.refs {
	font-size: smaller;
}
.refs::before {
	content: attr(header);
	margin-left: -2em;
	font-size: larger;
	border-bottom: 3px solid black;
}
.refs.plagiarized::before {
	border-bottom-color: var(--video-box-stolen-bg);
}
.refs.misinfo::before {
	border-bottom-color: var(--video-box-fabricated-bg);
}
.refs.yikes::before {
	border-bottom-color: var(--video-box-yikes-bg);
}
:target {
	background-color: rgb(255 255 0 / 15%);
}

.transcript-start {
	color: gray;
	text-align: center;
	font-size: 12px;
    margin-bottom: 2rem !important;
}
.transcript-start::before {
	content: 'Transcript Start';
}
section.footnotes {
	position: relative;
	margin-top: 3rem;
}
section.footnotes::before {
	content: 'End Transcript';
	position: absolute;
	top: -2rem;
	left: 0; right: 0;
	text-align: center;
}

.lyrics {
	margin-inline: auto;
	width: max-content;
	/* min-width: 600px; */
	font-family: serif;
	white-space: pre;
}
@media (max-width: 600px) {
	.lyrics {
		width: 100%;
		min-width: 0;
	}
}

a[href^="http:"]::after, 
a[href^="https:"]::after {
	content: "\f08e";
	font-family: "Font Awesome 6 Free";
	-webkit-font-smoothing: antialiased;
	display: var(--fa-display,inline-block);
	font-style: normal;
	font-variant: normal;
	line-height: 1;
	text-rendering: auto;
	font-weight: 900;
	padding-left: 0.4em;
}
james a[href^="http:"]::after, 
james a[href^="https:"]::after {
	font-size: smaller;
}

.video-card a[href^="http:"]::after, 
.video-card a[href^="https:"]::after {
	content: none !important;
}

sup.footnote-ref a::before { content: '['; }
sup.footnote-ref a::after { content: ']'; }

.spoiler-notice {
	background-color: var(--color-canvas-subtle);
	border: 1px solid var(--color-border-default);
	padding: 0.5em;
	margin: 0.5em 0;
	text-align: center;
}

q::before { content: none; }
q::after { content: none; }
q {
	margin: 0;
    border-left: 0.25em solid var(--color-border-default);
    border-right: 0.25em solid var(--color-border-default);
	background-color: var(--color-canvas-subtle);
}

blockquote.book-excerpt {
    font-family: serif;
    text-indent: 2em;
}
blockquote.book-excerpt > p {
	margin-block: 0;
}

.markdown-body details[open] > summary {
    border-bottom: 1px solid currentColor;
    padding-bottom: 0.7em;
    margin-bottom: 0.7em;
}

/* :root { --source-color: 120, 100%, 50%; } */

.color-hbomb { --source-color: hsl(59, 100%, 30%); }
.color-todd  { --source-color: hsl(0, 75%, 40%); }
.color-1     { --source-color: hsl(118, 100%, 30%); }
.color-2     { --source-color: hsl(187, 100%, 50%); }
.color-3     { --source-color: hsl(357, 92%, 43%); }
.color-4     { --source-color: hsl(71, 100%, 52%); }
.color-5     { --source-color: hsl(232, 100%, 47%); }
.color-6     { --source-color: hsl(138, 100%, 47%); }
.color-7     { --source-color: hsl(251, 100%, 75%); }
.color-8     { --source-color: hsl(0, 52%, 32%); }
.color-9     { --source-color: hsl(66, 100%, 35%); }
.color-10    { --source-color: hsl(37, 100%, 16%); }
.color-11    { --source-color: hsl(34, 98%, 34%); }
.color-12    { --source-color: hsl(164, 57%, 36%); }
.color-13    { --source-color: hsl(187, 90%, 19%); }
.color-14    { --source-color: hsl(342, 27%, 54%); }
.color-15    { --source-color: hsl(221, 100%, 50%); }
.color-16    { --source-color: hsl(273, 72%, 33%); }
.color-17    { --source-color: hsl(197, 47%, 31%); }
.color-18    { --source-color: hsl(318, 65%, 49%); }
.color-19    { --source-color: hsl(187, 100%, 39%); }


/* from { border-color: hsl(var(--source-color)); }
from mark { background-color: hsla(var(--source-color), 0.30) !important;}
span.colorize { color: hsl(var(--source-color)); font-weight: bold; } */

compare credits[header="Audience-member:"] {
	border-color: var(--video-box-stolen-bg);
}
